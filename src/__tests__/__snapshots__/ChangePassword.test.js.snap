// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ChangePassword Component Should render snapshot Agent 1`] = `
<AgentTemplate>
  <div
    className="register-wrap"
    style={
      Object {
        "height": "650px",
      }
    }
  >
    <br />
    <br />
    <br />
    <br />
    <h1
      className="fontWhite"
    >
      Change Password
    </h1>
    <div
      align="center"
      className="Oms register-html"
    >
      <span
        className="bigSuccessMessage"
      />
      <span
        className="bigErrorMessage"
      />
      <Form
        className="MyForm register-form"
        inline={false}
        onSubmit={[Function]}
      >
        <FormGroup
          as={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": Object {
                "noGutters": false,
              },
              "render": [Function],
            }
          }
          controlId="oldPassword"
        >
          <Col
            md={5}
            sm={5}
          >
            <FormLabel
              className="Labelling label"
              column={false}
              srOnly={false}
            >
              Old Password*
            </FormLabel>
          </Col>
          <Col
            md={7}
            sm={7}
          >
            <FormControl
              name="oldPassword"
              onChange={[Function]}
              placeholder="Old Password"
              required={true}
              type="password"
            />
          </Col>
        </FormGroup>
        <FormGroup
          as={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": Object {
                "noGutters": false,
              },
              "render": [Function],
            }
          }
          controlId="newPassword"
        >
          <Col
            md={5}
            sm={5}
          >
            <FormLabel
              className="Labelling label"
              column={false}
              srOnly={false}
            >
              New Password*
            </FormLabel>
          </Col>
          <Col
            md={7}
            sm={7}
          >
            <FormControl
              name="newPassword"
              onChange={[Function]}
              onCopy="return false"
              onCut="return false"
              placeholder="New Password"
              required={true}
              type="password"
            />
          </Col>
        </FormGroup>
        <FormGroup
          as={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": Object {
                "noGutters": false,
              },
              "render": [Function],
            }
          }
          controlId="confirmPassword"
        >
          <Col
            md={5}
            sm={5}
          >
            <FormLabel
              className="Labelling label"
              column={false}
              srOnly={false}
            >
              Confirm Password*
            </FormLabel>
          </Col>
          <Col
            md={7}
            sm={7}
          >
            <FormControl
              name="confirmPassword"
              onChange={[Function]}
              placeholder="Confirm Password"
              required={true}
              type="password"
            />
          </Col>
        </FormGroup>
        <br />
        <br />
        <p
          className="mandatoryFields"
        >
          * Fields are mandatory
        </p>
        <Button
          active={false}
          className="signIn"
          disabled={false}
          type="submit"
          variant="primary"
        >
          Save Changes
        </Button>
      </Form>
    </div>
  </div>
</AgentTemplate>
`;

exports[`ChangePassword Component Should render snapshot for Admin 1`] = `
<AdminTemplate>
  <div
    className="register-wrap"
    style={
      Object {
        "height": "600px",
      }
    }
  >
    <br />
    <br />
    <br />
    <br />
    <h1
      className="fontWhite"
    >
      Change Password
    </h1>
    <div
      align="center"
      className="Oms register-html"
    >
      <span
        className="bigSuccessMessage"
      />
      <span
        className="bigErrorMessage"
      />
      <Form
        className="MyForm register-form"
        inline={false}
        onSubmit={[Function]}
      >
        <FormGroup
          as={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": Object {
                "noGutters": false,
              },
              "render": [Function],
            }
          }
          controlId="oldPassword"
        >
          <Col
            md={5}
            sm={5}
          >
            <FormLabel
              className="Labelling label"
              column={false}
              srOnly={false}
            >
              Old Password*
            </FormLabel>
          </Col>
          <Col
            md={7}
            sm={7}
          >
            <FormControl
              name="oldPassword"
              onChange={[Function]}
              placeholder="Old Password"
              required={true}
              type="password"
            />
          </Col>
        </FormGroup>
        <FormGroup
          as={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": Object {
                "noGutters": false,
              },
              "render": [Function],
            }
          }
          controlId="newPassword"
        >
          <Col
            md={5}
            sm={5}
          >
            <FormLabel
              className="Labelling label"
              column={false}
              srOnly={false}
            >
              New Password*
            </FormLabel>
          </Col>
          <Col
            md={7}
            sm={7}
          >
            <FormControl
              name="newPassword"
              onChange={[Function]}
              onCopy="return false"
              onCut="return false"
              placeholder="New Password"
              required={true}
              type="password"
            />
          </Col>
        </FormGroup>
        <FormGroup
          as={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": Object {
                "noGutters": false,
              },
              "render": [Function],
            }
          }
          controlId="confirmPassword"
        >
          <Col
            md={5}
            sm={5}
          >
            <FormLabel
              className="Labelling label"
              column={false}
              srOnly={false}
            >
              Confirm Password*
            </FormLabel>
          </Col>
          <Col
            md={7}
            sm={7}
          >
            <FormControl
              name="confirmPassword"
              onChange={[Function]}
              placeholder="Confirm Password"
              required={true}
              type="password"
            />
          </Col>
        </FormGroup>
        <br />
        <br />
        <p
          className="mandatoryFields"
        >
          * Fields are mandatory
        </p>
        <Button
          active={false}
          className="signIn"
          disabled={false}
          type="submit"
          variant="primary"
        >
          Save Changes
        </Button>
      </Form>
    </div>
  </div>
</AdminTemplate>
`;

exports[`ChangePassword Component Should render snapshot for Customer 1`] = `
<CustomerTemplate>
  <div
    className="register-wrap"
    style={
      Object {
        "height": "600px",
      }
    }
  >
    <br />
    <br />
    <br />
    <br />
    <h1
      className="fontWhite"
    >
      Change Password
    </h1>
    <div
      align="center"
      className="Oms register-html"
    >
      <span
        className="bigSuccessMessage"
      />
      <span
        className="bigErrorMessage"
      />
      <Form
        className="MyForm register-form"
        inline={false}
        onSubmit={[Function]}
      >
        <FormGroup
          as={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": Object {
                "noGutters": false,
              },
              "render": [Function],
            }
          }
          controlId="oldPassword"
        >
          <Col
            md={5}
            sm={5}
          >
            <FormLabel
              className="Labelling label"
              column={false}
              srOnly={false}
            >
              Old Password*
            </FormLabel>
          </Col>
          <Col
            md={7}
            sm={7}
          >
            <FormControl
              name="oldPassword"
              onChange={[Function]}
              placeholder="Old Password"
              required={true}
              type="password"
            />
          </Col>
        </FormGroup>
        <FormGroup
          as={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": Object {
                "noGutters": false,
              },
              "render": [Function],
            }
          }
          controlId="newPassword"
        >
          <Col
            md={5}
            sm={5}
          >
            <FormLabel
              className="Labelling label"
              column={false}
              srOnly={false}
            >
              New Password*
            </FormLabel>
          </Col>
          <Col
            md={7}
            sm={7}
          >
            <FormControl
              name="newPassword"
              onChange={[Function]}
              onCopy="return false"
              onCut="return false"
              placeholder="New Password"
              required={true}
              type="password"
            />
          </Col>
        </FormGroup>
        <FormGroup
          as={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": Object {
                "noGutters": false,
              },
              "render": [Function],
            }
          }
          controlId="confirmPassword"
        >
          <Col
            md={5}
            sm={5}
          >
            <FormLabel
              className="Labelling label"
              column={false}
              srOnly={false}
            >
              Confirm Password*
            </FormLabel>
          </Col>
          <Col
            md={7}
            sm={7}
          >
            <FormControl
              name="confirmPassword"
              onChange={[Function]}
              placeholder="Confirm Password"
              required={true}
              type="password"
            />
          </Col>
        </FormGroup>
        <br />
        <br />
        <p
          className="mandatoryFields"
        >
          * Fields are mandatory
        </p>
        <Button
          active={false}
          className="signIn"
          disabled={false}
          type="submit"
          variant="primary"
        >
          Save Changes
        </Button>
      </Form>
    </div>
  </div>
</CustomerTemplate>
`;
